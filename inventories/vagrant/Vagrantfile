# -*- mode: ruby -*-

# vi: set ft=ruby :

require 'open3'
require 'json'
require 'yaml'

#Load dynamic inventory file
stdin, stdout, stderr, wait_thr = Open3.popen3('python ./inventory.py --vagrant')
output = stdout.gets(nil)
stdout.close
err_output = stderr.gets(nil)
stderr.close
exit_code = wait_thr.value
if exit_code != 0
	puts "Error running dynamic inventory:\n"+err_output
	exit 1
end
boxes = JSON.parse(output)

#Check environment variables are set
vagrant_os = ENV['OS_VERSION']
if vagrant_os == nil
	puts "Exported environment variable OS_VERSION not set. Please see boxes.json for valid values."
	exit 1
end

vagrant_hdp = ENV['HDP_VERSION']
if vagrant_hdp == nil
	puts "Exported environment variable HDP_VERSION not set. Please see boxes.json for valid values."
	exit 1
end

#Load box config and choose correct one
box_def_file = File.read('boxes.json')
box_def = JSON.parse(box_def_file)
vagrant_box_os = box_def[vagrant_os]
if vagrant_box_os == nil
	puts "No box found for given OS_VERSION. Please see boxes.json for valid values."
	exit 1
end
vagrant_box = vagrant_box_os[vagrant_hdp]
if vagrant_box == nil
	puts "No box found for given HDP_VERSION. Please see boxes.json for valid values."
	exit 1
end

#Vagrant configuration
Vagrant.configure(2) do |config|

  # Turn off shared folders
  config.vm.synced_folder ".", "/vagrant", id: "vagrant-root", disabled: true

  boxes.each do |host, opts|
    config.vm.define host do |config|
      config.vm.hostname = host

      config.vm.provider "vmware_fusion" do |v|
        v.vmx["memsize"] = opts["mem"]
        v.vmx["numvcpus"] = opts["cpu"]
      end

      config.vm.provider "virtualbox" do |v|
        v.customize ["modifyvm", :id, "--memory", opts["mem"]]
        v.customize ["modifyvm", :id, "--cpus", opts["cpu"]]
        v.customize ["modifyvm", :id, "--ioapic", "on"]
        v.customize ["modifyvm", :id, "--nicpromisc2", "allow-all"]
        v.customize ["modifyvm", :id, "--nicpromisc1", "allow-all"]
      end

      config.vm.network :private_network, ip: opts["ip"]
      config.vm.box = vagrant_box

    end
  end
end
